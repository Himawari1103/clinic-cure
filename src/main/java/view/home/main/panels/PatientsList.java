/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.home.main.panels;

import controller.main.ReportController;
import view.home.components.table.Table;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.time.LocalDate;

/**
 *
 * @author Chi Cute
 */
public class PatientsList extends javax.swing.JPanel {

    /**
     * Creates new form PatientsList
     */
    TableRowSorter<DefaultTableModel> rowSorter;
    public PatientsList() {
        initComponents();
        patientTable.fixTable(jScrollPane1);
        rowSorter = new TableRowSorter<>((DefaultTableModel) patientTable.getModel());
        patientTable.setRowSorter(rowSorter);
    }

    public void addData(LocalDate start, LocalDate end){
        ReportController.addDataPatientList(this.patientTable,start,end);
    }

    public void addData(){
        ReportController.addDataPatientList(this.patientTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new Table();

        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ tên", "Ngày sinh", "Điện thoại", "Địa chỉ", "Số lượt khám"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(patientTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private Table patientTable;
    // End of variables declaration//GEN-END:variables


    public Table getPatientTable() {
        return patientTable;
    }

    public void setPatientTable(Table patientTable) {
        this.patientTable = patientTable;
    }
}
